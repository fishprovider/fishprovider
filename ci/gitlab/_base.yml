image: node:lts

variables:
  GIT_CLEAN_FLAGS: -ffd -e ~/.npm -e ~/.cache

stages:
  - test
  - deploy
  - clean

.rule_default_branch:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH || $CI_COMMIT_TAG
      when: always

.cache_npm:
  cache:
    key: npm-$CI_COMMIT_REF_SLUG
    paths:
      - ~/.npm
      - node_modules

.install_doppler:
  script:
    - apt update && apt install -y curl gnupg
    - curl -Ls --tlsv1.2 --proto "=https" --retry 3 https://cli.doppler.com/install.sh | sh

.install_pyenv:
  script: |
    pyenv () { \
      local command \
      command="${1:-}"  \
      if [ "$#" -gt 0 ] \
      then \
        shift \
      fi \
      case "$command" in \
        (rehash | shell) eval "$(pyenv "sh-$command" "$@")" ;; \
        (*) command pyenv "$command" "$@" ;; \
      esac \
    }

.install_rbenv:
  script: |
    rbenv () { \
      local command \
      command="${1:-}" \
      if [ "$#" -gt 0 ] \
      then \
        shift \
      fi \
      case "$command" in \
        (rehash | shell) eval "$(rbenv "sh-$command" "$@")" ;; \
        (*) command rbenv "$command" "$@" ;; \
      esac \
    }

.notif:
  script:
    - '[ ! -z "$NOTIF_MSG" ] && curl -X POST -d "{\"content\": \"${NOTIF_MSG}\"}" -H "Content-Type: application/json" $DISCORD_URL || echo "No message to send"'
    - '[ ! -z "$NOTIF_MSG" ] && curl -X POST -d "{\"text\": \"${NOTIF_MSG}\"}" -H "Content-Type: application/json" $SLACK_URL || echo "No message to send"'
